version: '3.5'

services:

  django:
    build:
      context: ./
      dockerfile: Dockerfile.dev
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: iogt
      DB_HOST: database
      DB_PORT: '5432'
      DJANGO_SETTINGS_MODULE: iogt.settings.docker_compose_dev
      COMMIT_HASH: asdfghjkl
      WAGTAILTRANSFER_SECRET_KEY: wagtailtransfer-secret-key
      WAGTAILTRANSFER_SOURCE_NAME: iogt_global
      WAGTAILTRANSFER_SOURCE_BASE_URL: https://example.com/wagtail-transfer/
      WAGTAILTRANSFER_SOURCE_SECRET_KEY: wagtailtransfer-source-secret-key
      BASE_URL: 'http://localhost:8000'
      VAPID_PUBLIC_KEY: ''
      VAPID_PRIVATE_KEY: ''
      VAPID_ADMIN_EMAIL: ''
      COMMENTS_COMMUNITY_MODERATION: 'enable'
      COMMENT_MODERATION_CLASS: 'comments.clients.AlwaysApproveModerator'
      BLACKLISTED_WORDS: ''
      SUPERSET_BASE_URL: ''
      SUPERSET_DATABASE_NAME: ''
      SUPERSET_USERNAME: ''
      SUPERSET_PASSWORD: ''
      PUSH_NOTIFICATION: 'enable'
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/app/
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
      - database

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.12.1'
    environment:
      - discovery.type=single-node
    volumes:
      - es-data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  database:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: iogt
    volumes:
      - pg-data01:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432


volumes:
  es-data01:
  pg-data01:
