# Generated by Django 3.1.14 on 2022-08-01 10:24

from django.db import migrations, models
import django.db.models.deletion
import home.blocks
import home.mixins
import messaging.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmarkdown.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailmenus', '0023_remove_use_specific'),
        ('wagtailsvg', '0002_svg_edit_code'),
        ('wagtailredirects', '0006_redirect_increase_max_length'),
        ('questionnaires', '0029_auto_20220512_1350'),
        ('wagtailforms', '0004_add_verbose_name_plural'),
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('home', '0047_auto_20220714_0819'),
    ]

    operations = [
        migrations.CreateModel(
            name='OfflineContentIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('commenting_status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('disabled', 'Disabled'), ('timestamped', 'Timestamped'), ('inherited', 'Inherited')], default='inherited', max_length=15)),
                ('commenting_starts_at', models.DateTimeField(blank=True, null=True)),
                ('commenting_ends_at', models.DateTimeField(blank=True, null=True)),
                ('index_page_description', models.TextField(blank=True, null=True)),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title', template='blocks/heading.html')), ('paragraph', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link', 'image'])), ('markdown', wagtailmarkdown.blocks.MarkdownBlock(icon='code')), ('paragraph_v1_legacy', home.blocks.RawHTMLBlock(icon='code')), ('image', wagtail.images.blocks.ImageChooserBlock(template='blocks/image.html')), ('list', wagtail.blocks.ListBlock(wagtailmarkdown.blocks.MarkdownBlock(icon='code'))), ('numbered_list', home.blocks.NumberedListBlock(wagtailmarkdown.blocks.MarkdownBlock(icon='code'))), ('page_button', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock()), ('text', wagtail.blocks.CharBlock(max_length=255, required=False))])), ('embedded_poll', wagtail.blocks.StructBlock([('direct_display', wagtail.blocks.BooleanBlock(required=False)), ('poll', home.blocks.EmbeddedQuestionnaireChooserBlock(page_type=['questionnaires.Poll']))])), ('embedded_survey', wagtail.blocks.StructBlock([('direct_display', wagtail.blocks.BooleanBlock(required=False)), ('survey', home.blocks.EmbeddedQuestionnaireChooserBlock(page_type=['questionnaires.Survey']))])), ('embedded_quiz', wagtail.blocks.StructBlock([('direct_display', wagtail.blocks.BooleanBlock(required=False)), ('quiz', home.blocks.EmbeddedQuestionnaireChooserBlock(page_type=['questionnaires.Quiz']))])), ('media', home.blocks.MediaBlock(icon='media')), ('chat_bot', wagtail.blocks.StructBlock([('subject', wagtail.blocks.CharBlock()), ('button_text', wagtail.blocks.CharBlock()), ('trigger_string', wagtail.blocks.CharBlock()), ('channel', messaging.blocks.ChatBotChannelChooserBlock())])), ('download', wagtail.blocks.StructBlock([('available_text', wagtail.blocks.CharBlock(help_text='This text appears when it is possible for the user to install the app on their phone.')), ('unavailable_text', wagtail.blocks.CharBlock(form_classname='red-help-text', help_text='This text appears when the user is using a feature phone and thus cannot install the app (the button will be disabled in this case). [Currently not implemented]', required=False)), ('offline_text', wagtail.blocks.CharBlock(help_text="This text appears when the user is navigating the site via the offline app and thus it doesn't make sense to install the offline app again (the button will be disabled in this case).", required=False)), ('page', wagtail.blocks.PageChooserBlock(page_type=['wagtailcore.Page'])), ('description', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link', 'image']))]))])),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailsvg.svg')),
                ('image_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image')),
                ('lead_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Offline Content Index Page',
            },
            bases=('wagtailcore.page', home.mixins.PageUtilsMixin, models.Model, home.mixins.TitleIconMixin),
        ),
        migrations.DeleteModel(
            name='OfflineAppPage',
        ),
    ]
